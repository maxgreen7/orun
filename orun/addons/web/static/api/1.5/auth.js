// Generated by CoffeeScript 1.10.0
(function() {
  var Auth, SESSION_USER_KEY,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  SESSION_USER_KEY = '_katridUser';

  Auth = (function() {
    Auth.prototype.user = null;

    function Auth() {
      this.user = JSON.parse(window.sessionStorage.getItem(SESSION_USER_KEY));
      if (this.user == null) {
        this.user = {
          'is_authenticated': false
        };
      }
    }

    Auth.prototype.login = function(username, password) {
      var rpcName;
      rpcName = Katrid.Settings.server + '/api/auth/login/';
      return $.ajax({
        method: 'POST',
        url: rpcName,
        data: JSON.stringify({
          'username': username,
          'password': password
        }),
        contentType: "application/json; charset=utf-8",
        dataType: 'json'
      }).success(function(res) {
        console.log(res);
        return window.sessionStorage.setItem(SESSION_USER_KEY, JSON.stringify(res.result));
      });
    };

    Auth.prototype.loginRequired = function(path, urls, next) {
      if ((indexOf.call(urls, path) >= 0 && this.user.is_authenticated) || (indexOf.call(urls, path) < 0)) {
        return true;
      } else {
        return false;
      }
    };

    Auth.prototype.isAuthenticated = function() {
      var rpcName;
      rpcName = Katrid.Settings.server + '/api/auth/login/';
      return $.get(rpcName);
    };

    return Auth;

  })();

  Katrid.Auth = new Auth();

}).call(this);

//# sourceMappingURL=auth.js.map
