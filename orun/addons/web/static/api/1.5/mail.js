// Generated by CoffeeScript 1.10.0
(function() {
  var Comments, MailComments, MailFollowers,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Comments = (function() {
    function Comments(scope1) {
      this.scope = scope1;
      this.model = this.scope.$parent.model;
      this.scope.$parent.$watch('recordId', (function(_this) {
        return function(key) {
          _this.scope.loading = Katrid.i18n.gettext('Loading...');
          return setTimeout(function() {
            _this.masterChanged(key);
            return _this.scope.$apply(function() {
              return _this.scope.loading = null;
            });
          }, 1000);
        };
      })(this));
      this.items = [];
    }

    Comments.prototype.masterChanged = function(key) {
      var svc;
      if (key) {
        svc = new Katrid.Services.Model('mail.message');
        return svc.post('get_messages', null, {
          args: [this.scope.$parent.record.messages]
        }).done((function(_this) {
          return function(res) {
            return _this.scope.$apply(function() {
              return _this.items = res.result.data;
            });
          };
        })(this));
      }
    };

    Comments.prototype.postMessage = function(msg) {
      return this.model.post('post_message', null, {
        args: [[this.scope.$parent.recordId]],
        kwargs: {
          content: msg,
          content_subtype: 'html',
          format: true
        }
      }).done((function(_this) {
        return function(res) {
          var msgs;
          msgs = res.result;
          _this.scope.message = '';
          return _this.scope.$apply(function() {
            return _this.items = msgs.concat(_this.items);
          });
        };
      })(this));
    };

    return Comments;

  })();

  Katrid.uiKatrid.directive('comments', function() {
    return {
      restrict: 'E',
      scope: {},
      replace: true,
      link: function(scope, element, attrs) {
        var form;
        form = $(element).closest('div[ng-form=form]');
        return form.append(element);
      },
      template: function() {
        return "<div class=\"content panel panel-default\">\n  <div class=\"container comments\">\n    <mail-comments/>\n  </div>\n</div>";
      }
    };
  });

  Katrid.uiKatrid.directive('mailComments', function() {
    return {
      restrict: 'E',
      replace: true,
      link: function(scope, element, attrs) {
        scope.comments = new Comments(scope);
        return scope.showEditor = function() {
          $('#mail-editor').show();
          $('#mail-msgEditor').focus();
          return true;
        };
      },
      template: function() {
        return "<div>\n      <h3>" + (Katrid.i18n.gettext('Comments')) + "</h3>\n      <div class=\"form-group\">\n      <button class=\"btn btn-default\" ng-click=\"showEditor();\">" + (Katrid.i18n.gettext('New message')) + "</button> <button class=\"btn\">" + (Katrid.i18n.gettext('Log an internal note')) + "</button>\n      </div>\n      <div id=\"mail-editor\" style=\"display: none;\">\n        <div class=\"form-group\">\n          <textarea id=\"mail-msgEditor\" class=\"form-control\" ng-model=\"message\"></textarea>\n        </div>\n        <div class=\"from-group\">\n          <button class=\"btn btn-primary\" ng-click=\"comments.postMessage(message)\">" + (Katrid.i18n.gettext('Send')) + "</button>\n        </div>\n      </div>\n\n      <hr>\n\n      <div ng-show=\"loading\">${loading}</div>\n      <div class=\"comment media col-sm-12\" ng-repeat=\"comment in comments.items\">\n        <div class=\"media-left\">\n          <img src=\"/static/web/static/assets/img/avatar.png\" class=\"avatar img-circle\">\n        </div>\n        <div class=\"media-body\">\n          <strong>Author Name</strong> - <span title=\"${comment.date_time|moment:'LLLL'}\"> ${comment.date_time|moment}</span>\n          <div class=\"clearfix\"></div>\n          <div>\n            ${comment.content}\n          </div>\n        </div>\n      </div>\n</div>";
      }
    };
  });

  MailFollowers = (function() {
    function MailFollowers() {}

    return MailFollowers;

  })();

  MailComments = (function(superClass) {
    extend(MailComments, superClass);

    function MailComments() {
      return MailComments.__super__.constructor.apply(this, arguments);
    }

    MailComments.prototype.tag = 'mail-comments';

    MailComments.prototype.spanTemplate = function(scope, el, attrs, field) {
      return '';
    };

    return MailComments;

  })(Katrid.UI.Widgets.Widget);

  Katrid.UI.Widgets.MailComments = MailComments;

}).call(this);

//# sourceMappingURL=mail.js.map
